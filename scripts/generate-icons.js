const fs = require('fs');
const path = require('path');
const { exec } = require('child_process');

/**
 * This script generates a React component file with all Lucide icons imported and re-exported.
 * This helps with bundling and optimizing icon usage across the application.
 */

// Configuration
const ICONS_OUTPUT_PATH = path.join(__dirname, '../components/ui/icons.tsx');
const LUCIDE_PACKAGE = 'lucide-react';

// Get the list of all available icons from lucide-react
function getLucideIcons() {
  return new Promise((resolve, reject) => {
    exec(`npm list ${LUCIDE_PACKAGE} --json`, (err, stdout) => {
      if (err) {
        // If there's an error, try to proceed anyway with a manual fetch
        console.warn('Warning: Could not determine installed lucide-react version automatically.');
        
        // Fetch available icons by importing and checking
        exec(`node -e "console.log(Object.keys(require('${LUCIDE_PACKAGE}')).filter(k => k !== 'default' && !k.startsWith('__')).join(','))"`, 
          (err, stdout) => {
            if (err) {
              reject(new Error(`Failed to get icons list: ${err.message}`));
              return;
            }
            
            const icons = stdout.trim().split(',');
            resolve(icons);
          });
        return;
      }
      
      try {
        // Try to use npm to get the list of exported icons
        exec(`node -e "console.log(Object.keys(require('${LUCIDE_PACKAGE}')).filter(k => k !== 'default' && !k.startsWith('__')).join(','))"`, 
          (err, stdout) => {
            if (err) {
              reject(new Error(`Failed to get icons list: ${err.message}`));
              return;
            }
            
            const icons = stdout.trim().split(',');
            resolve(icons);
          });
      } catch (error) {
        reject(new Error(`Failed to parse icons: ${error.message}`));
      }
    });
  });
}

// Generate the icons component file
async function generateIconsComponent(icons) {
  // Create imports
  const imports = `import { ${icons.join(', ')} } from '${LUCIDE_PACKAGE}';\n`;
  
  // Create exports
  const exports = `
export {
  ${icons.map(icon => `  ${icon},`).join('\n')}
};

// Icon component with common props
export interface IconProps extends React.ComponentProps<'svg'> {
  size?: number | string;
  strokeWidth?: number;
  className?: string;
}

export const iconVariants = {
  size: {
    sm: "size-4",
    md: "size-5",
    lg: "size-6",
    xl: "size-7",
  },
};
`;

  // Create the complete file content
  const fileContent = `/**
 * This file is auto-generated by scripts/generate-icons.js
 * Do not modify this file manually
 */

${imports}
${exports}
`;

  // Create the directory if it doesn't exist
  const dir = path.dirname(ICONS_OUTPUT_PATH);
  if (!fs.existsSync(dir)) {
    fs.mkdirSync(dir, { recursive: true });
  }

  // Write the file
  fs.writeFileSync(ICONS_OUTPUT_PATH, fileContent);
}

// Main function
async function main() {
  try {
    console.log('Generating icons component...');
    
    // Get the list of icons
    const icons = await getLucideIcons();
    
    if (!icons || icons.length === 0) {
      throw new Error('No icons found in the lucide-react package');
    }
    
    console.log(`Found ${icons.length} icons in lucide-react`);
    
    // Generate the component
    await generateIconsComponent(icons);
    
    console.log(`✅ Icons component generated at ${ICONS_OUTPUT_PATH}`);
  } catch (error) {
    console.error('❌ Error generating icons component:', error.message);
    process.exit(1);
  }
}

// Run the script
main(); 